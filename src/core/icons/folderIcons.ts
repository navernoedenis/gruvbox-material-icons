import type {
  FolderTheme,
  FolderThemeName,
} from '../models/icons/folders/folderTheme';
import { IconPack } from '../models/icons/iconPack';

/**
 * Defines folder icons
 */
export const folderIcons: FolderTheme[] = [
  getFolderIcons('specific'),
  getFolderIcons('colorful'),
  {
    name: 'classic',
    defaultIcon: { name: 'folder' },
    rootFolder: { name: 'folder-root' },
  },
  { name: 'none', defaultIcon: { name: '' } },
];

function getFolderIcons(type: FolderThemeName): FolderTheme {
  let prefix = `${type}-folder`;

  if (type === 'specific') {
    prefix = 'folder';
  }

  return {
    name: type,
    defaultIcon: { name: 'folder' },
    rootFolder: { name: 'folder-root' },
    icons: [
      { name: `${prefix}-rust`, folderNames: ['rust'] },
      {
        name: `${prefix}-robot`,
        folderNames: ['bot', 'bots', 'robot', 'robots'],
      },
      {
        name: `${prefix}-src`,
        folderNames: ['src', 'srcs', 'source', 'sources', 'code'],
      },
      {
        name: `${prefix}-dist`,
        folderNames: [
          'dist',
          'out',
          'output',
          'build',
          'builds',
          'release',
          'bin',
          'distribution',
        ],
      },
      {
        name: `${prefix}-css`,
        folderNames: ['css', 'stylesheet', 'stylesheets', 'style', 'styles'],
      },
      { name: `${prefix}-sass`, folderNames: ['sass', 'scss'] },
      { name: `${prefix}-television`, folderNames: ['tv', 'television'] },
      { name: `${prefix}-desktop`, folderNames: ['desktop', 'display'] },
      { name: `${prefix}-console`, folderNames: ['console'] },
      {
        name: `${prefix}-images`,
        folderNames: [
          'images',
          'image',
          'imgs',
          'img',
          'icons',
          'icon',
          'icos',
          'ico',
          'figures',
          'figure',
          'figs',
          'fig',
          'screenshot',
          'screenshots',
          'screengrab',
          'screengrabs',
          'pic',
          'pics',
          'picture',
          'pictures',
          'photo',
          'photos',
          'photograph',
          'photographs',
        ],
      },
      {
        name: `${prefix}-scripts`,
        folderNames: ['script', 'scripts', 'scripting'],
      },
      {
        name: `${prefix}-node`,
        folderNames: ['node', 'nodejs', 'node_modules'],
      },
      {
        name: `${prefix}-javascript`,
        folderNames: ['js', 'javascript', 'javascripts'],
      },
      { name: `${prefix}-json`, folderNames: ['json', 'jsons'] },
      { name: `${prefix}-font`, folderNames: ['font', 'fonts'] },
      { name: `${prefix}-bower`, folderNames: ['bower_components'] },
      {
        name: `${prefix}-test`,
        folderNames: ['test', 'tests', 'testing', 'snapshots', 'spec', 'specs'],
      },
      {
        name: `${prefix}-directive`,
        folderNames: ['directive', 'directives'],
      },
      {
        name: `${prefix}-jinja`,
        folderNames: ['jinja', 'jinja2', 'j2'],
        light: true,
      },
      { name: `${prefix}-markdown`, folderNames: ['markdown', 'md'] },
      { name: `${prefix}-pdm`, folderNames: ['pdm-plugins', 'pdm-build'] },
      { name: `${prefix}-php`, folderNames: ['php'] },
      { name: `${prefix}-phpmailer`, folderNames: ['phpmailer'] },
      { name: `${prefix}-sublime`, folderNames: ['sublime'] },
      {
        name: `${prefix}-docs`,
        folderNames: [
          'doc',
          'docs',
          'document',
          'documents',
          'documentation',
          'post',
          'posts',
          'article',
          'articles',
          'wiki',
          'news',
        ],
      },
      { name: `${prefix}-gh-workflows`, folderNames: ['github/workflows'] },
      {
        name: `${prefix}-git`,
        folderNames: ['git', 'patches', 'githooks', 'submodules'],
      },
      { name: `${prefix}-github`, folderNames: ['github'] },
      { name: `${prefix}-gitea`, folderNames: ['gitea'] },
      { name: `${prefix}-gitlab`, folderNames: ['gitlab'] },
      { name: `${prefix}-forgejo`, folderNames: ['forgejo'] },
      { name: `${prefix}-vscode`, folderNames: ['vscode', 'vscode-test'] },
      {
        name: `${prefix}-views`,
        folderNames: [
          'view',
          'views',
          'screen',
          'screens',
          'page',
          'pages',
          'public_html',
          'html',
        ],
      },
      { name: `${prefix}-vue`, folderNames: ['vue'] },
      { name: `${prefix}-vuepress`, folderNames: ['vuepress'] },
      { name: `${prefix}-expo`, folderNames: ['expo', 'expo-shared'] },
      {
        name: `${prefix}-config`,
        folderNames: [
          'cfg',
          'cfgs',
          'conf',
          'confs',
          'config',
          'configs',
          'configuration',
          'configurations',
          'setting',
          'settings',
          'META-INF',
          'option',
          'options',
          'pref',
          'prefs',
          'preference',
          'preferences',
        ],
      },
      {
        name: `${prefix}-i18n`,
        folderNames: [
          'i18n',
          'internationalization',
          'lang',
          'langs',
          'language',
          'languages',
          'locale',
          'locales',
          'l10n',
          'localization',
          'translation',
          'translate',
          'translations',
          'tx',
        ],
      },
      {
        name: `${prefix}-components`,
        folderNames: ['components', 'widget', 'widgets', 'fragments'],
      },
      {
        name: `${prefix}-verdaccio`,
        folderNames: ['verdaccio'],
      },
      { name: `${prefix}-aurelia`, folderNames: ['aurelia_project'] },
      {
        name: `${prefix}-resource`,
        folderNames: [
          'resource',
          'resources',
          'res',
          'asset',
          'assets',
          'static',
          'report',
          'reports',
        ],
      },
      {
        name: `${prefix}-lib`,
        folderNames: [
          'lib',
          'libs',
          'library',
          'libraries',
          'vendor',
          'vendors',
          'third-party',
          'lib64',
        ],
      },
      {
        name: `${prefix}-theme`,
        folderNames: [
          'themes',
          'theme',
          'color',
          'colors',
          'design',
          'designs',
        ],
      },
      { name: `${prefix}-webpack`, folderNames: ['webpack'] },
      { name: `${prefix}-global`, folderNames: ['global'] },
      {
        name: `${prefix}-public`,
        folderNames: [
          'public',
          'www',
          'wwwroot',
          'web',
          'website',
          'websites',
          'site',
          'browser',
          'browsers',
        ],
      },
      {
        name: `${prefix}-include`,
        folderNames: [
          'inc',
          'include',
          'includes',
          'partial',
          'partials',
          'inc64',
        ],
      },
      {
        name: `${prefix}-docker`,
        folderNames: ['docker', 'dockerfiles', 'dockerhub'],
      },
      {
        name: `${prefix}-ngrx-store`,
        folderNames: ['store'],
        enabledFor: [IconPack.Ngrx],
      },
      {
        name: `${prefix}-ngrx-effects`,
        folderNames: ['effects'],
        enabledFor: [IconPack.Ngrx],
        clone: {
          base: 'folder-ngrx-store',
          color: 'cyan-500',
        },
      },
      {
        name: `${prefix}-ngrx-state`,
        folderNames: ['states', 'state'],
        enabledFor: [IconPack.Ngrx],
        clone: {
          base: 'folder-ngrx-store',
          color: 'lime-800',
        },
      },
      {
        name: `${prefix}-ngrx-reducer`,
        folderNames: ['reducers', 'reducer'],
        enabledFor: [IconPack.Ngrx],
        clone: {
          base: 'folder-ngrx-store',
          color: 'red-400',
        },
      },
      {
        name: `${prefix}-ngrx-actions`,
        folderNames: ['actions'],
        enabledFor: [IconPack.Ngrx],
        clone: {
          base: 'folder-ngrx-store',
          color: 'purple-400',
        },
      },
      {
        name: `${prefix}-ngrx-entities`,
        folderNames: ['entities'],
        enabledFor: [IconPack.Ngrx],
        clone: {
          base: 'folder-ngrx-store',
          color: 'yellow-700',
        },
      },
      {
        name: `${prefix}-ngrx-selectors`,
        folderNames: ['selectors'],
        enabledFor: [IconPack.Ngrx],
        clone: {
          base: 'folder-ngrx-store',
          color: 'deep-orange-A200',
        },
      },
      {
        name: `${prefix}-redux-reducer`,
        folderNames: ['reducers', 'reducer'],
        enabledFor: [IconPack.Redux],
      },
      {
        name: `${prefix}-redux-actions`,
        folderNames: ['actions'],
        enabledFor: [IconPack.Redux],
        clone: {
          base: 'folder-redux-reducer',
          color: 'purple-400',
        },
      },
      {
        name: `${prefix}-redux-selector`,
        folderNames: ['selectors', 'selector'],
        enabledFor: [IconPack.Redux],
        clone: {
          base: 'folder-redux-reducer',
          color: 'deep-orange-A200',
        },
      },
      {
        name: `${prefix}-redux-store`,
        folderNames: ['store', 'stores'],
        enabledFor: [IconPack.Redux],
        clone: {
          base: 'folder-redux-reducer',
          color: 'light-green-500',
        },
      },
      {
        name: `${prefix}-react-components`,
        folderNames: [
          'components',
          'react',
          'jsx',
          'reactjs',
          'react-components',
        ],
        enabledFor: [IconPack.React, IconPack.Redux],
      },
      {
        name: `${prefix}-astro`,
        folderNames: ['astro'],
      },
      {
        name: `${prefix}-database`,
        folderNames: ['db', 'data', 'database', 'databases', 'sql'],
      },
      { name: `${prefix}-log`, folderNames: ['log', 'logs', 'logging'] },
      { name: `${prefix}-target`, folderNames: ['target'] },
      {
        name: `${prefix}-temp`,
        folderNames: ['temp', 'tmp', 'cached', 'cache'],
      },
      { name: `${prefix}-aws`, folderNames: ['aws', 'azure', 'gcp'] },
      {
        name: `${prefix}-audio`,
        folderNames: [
          'aud',
          'auds',
          'audio',
          'audios',
          'music',
          'sound',
          'sounds',
          'voice',
          'voices',
          'recordings',
        ],
      },
      {
        name: `${prefix}-video`,
        folderNames: [
          'vid',
          'vids',
          'video',
          'videos',
          'movie',
          'movies',
          'media',
        ],
      },
      {
        name: `${prefix}-kubernetes`,
        folderNames: ['kubernetes', 'k8s'],
      },
      {
        name: `${prefix}-import`,
        folderNames: ['import', 'imports', 'imported'],
      },
      {
        name: `${prefix}-export`,
        folderNames: ['export', 'exports', 'exported'],
      },
      { name: `${prefix}-wakatime`, folderNames: ['wakatime'] },
      { name: `${prefix}-circleci`, folderNames: ['circleci'] },
      {
        name: `${prefix}-wordpress`,
        folderNames: ['wordpress-org', 'wp-content'],
      },
      { name: `${prefix}-gradle`, folderNames: ['gradle'] },
      {
        name: `${prefix}-coverage`,
        folderNames: [
          'coverage',
          'nyc-output',
          'nyc_output',
          'e2e',
          'it',
          'integration-test',
          'integration-tests',
        ],
      },
      {
        name: `${prefix}-class`,
        folderNames: [
          'class',
          'classes',
          'model',
          'models',
          'schemas',
          'schema',
        ],
      },
      {
        name: `${prefix}-other`,
        folderNames: [
          'other',
          'others',
          'misc',
          'miscellaneous',
          'extra',
          'extras',
          'etc',
        ],
      },
      { name: `${prefix}-lua`, folderNames: ['lua'] },
      { name: `${prefix}-turborepo`, folderNames: ['turbo'] },
      {
        name: `${prefix}-typescript`,
        folderNames: ['typescript', 'ts', 'typings', '@types', 'types'],
      },
      { name: `${prefix}-graphql`, folderNames: ['graphql', 'gql'] },
      {
        name: `${prefix}-routes`,
        folderNames: ['routes', 'router', 'routers'],
      },
      { name: `${prefix}-ci`, folderNames: ['ci'] },
      {
        name: `${prefix}-benchmark`,
        folderNames: [
          'benchmark',
          'benchmarks',
          'performance',
          'profiling',
          'measure',
          'measures',
          'measurement',
        ],
      },
      {
        name: `${prefix}-messages`,
        folderNames: [
          'messages',
          'messaging',
          'forum',
          'chat',
          'chats',
          'conversation',
          'conversations',
          'dialog',
          'dialogs',
        ],
      },
      { name: `${prefix}-less`, folderNames: ['less'] },
      {
        name: `${prefix}-gulp`,
        folderNames: [
          'gulp',
          'gulp-tasks',
          'gulpfile.js',
          'gulpfile.mjs',
          'gulpfile.ts',
          'gulpfile.babel.js',
        ],
      },
      {
        name: `${prefix}-python`,
        folderNames: ['python', 'pycache', 'pytest_cache'],
      },
      {
        name: `${prefix}-sandbox`,
        folderNames: ['sandbox', 'playground'],
      },
      {
        name: `${prefix}-scons`,
        folderNames: ['scons', 'sconf_temp', 'scons_cache'],
      },
      {
        name: `${prefix}-mojo`,
        folderNames: ['mojo'],
      },
      { name: `${prefix}-moon`, folderNames: ['moon'] },
      {
        name: `${prefix}-debug`,
        folderNames: ['debug', 'debugger', 'debugging'],
      },
      { name: `${prefix}-fastlane`, folderNames: ['fastlane'] },
      {
        name: `${prefix}-plugin`,
        folderNames: [
          'plugin',
          'plugins',
          'mod',
          'mods',
          'modding',
          'extension',
          'extensions',
          'addon',
          'addons',
          'addin',
          'addins',
          'module',
          'modules',
        ],
      },
      {
        name: `${prefix}-middleware`,
        folderNames: ['middleware', 'middlewares'],
      },
      {
        name: `${prefix}-controller`,
        folderNames: [
          'controller',
          'controllers',
          'controls',
          'service',
          'services',
          'provider',
          'providers',
          'handler',
          'handlers',
        ],
      },
      { name: `${prefix}-ansible`, folderNames: ['ansible'] },
      {
        name: `${prefix}-server`,
        folderNames: ['server', 'servers', 'backend', 'backends'],
      },
      {
        name: `${prefix}-client`,
        folderNames: [
          'client',
          'clients',
          'frontend',
          'frontends',
          'pwa',
          'spa',
        ],
      },
      { name: `${prefix}-tasks`, folderNames: ['tasks', 'tickets'] },
      { name: `${prefix}-android`, folderNames: ['android'] },
      { name: `${prefix}-ios`, folderNames: ['ios'] },
      {
        name: `${prefix}-ui`,
        folderNames: ['presentation', 'gui', 'ui', 'ux'],
      },
      { name: `${prefix}-upload`, folderNames: ['uploads', 'upload'] },
      {
        name: `${prefix}-download`,
        folderNames: ['downloads', 'download', 'downloader', 'downloaders'],
      },
      {
        name: `${prefix}-tools`,
        folderNames: [
          'tools',
          'toolkit',
          'toolkits',
          'toolbox',
          'toolboxes',
          'tooling',
          'devtools',
          'kit',
          'kits',
        ],
      },
      { name: `${prefix}-helper`, folderNames: ['helpers', 'helper'] },
      { name: `${prefix}-serverless`, folderNames: ['serverless'] },
      { name: `${prefix}-api`, folderNames: ['api', 'apis', 'restapi'] },
      {
        name: `${prefix}-app`,
        folderNames: ['app', 'apps', 'application', 'applications'],
      },
      {
        name: `${prefix}-apollo`,
        folderNames: [
          'apollo',
          'apollo-client',
          'apollo-cache',
          'apollo-config',
        ],
      },
      {
        name: `${prefix}-archive`,
        folderNames: [
          'arc',
          'arcs',
          'archive',
          'archives',
          'archival',
          'bkp',
          'bkps',
          'bak',
          'baks',
          'backup',
          'backups',
          'back-up',
          'back-ups',
          'history',
          'histories',
        ],
      },
      { name: `${prefix}-batch`, folderNames: ['batch', 'batchs', 'batches'] },
      { name: `${prefix}-buildkite`, folderNames: ['buildkite'] },
      { name: `${prefix}-cluster`, folderNames: ['cluster', 'clusters'] },
      {
        name: `${prefix}-command`,
        folderNames: [
          'command',
          'commands',
          'commandline',
          'cmd',
          'cli',
          'clis',
        ],
      },
      { name: `${prefix}-constant`, folderNames: ['constant', 'constants'] },
      {
        name: `${prefix}-container`,
        folderNames: ['container', 'containers', 'devcontainer'],
      },
      { name: `${prefix}-content`, folderNames: ['content', 'contents'] },
      { name: `${prefix}-context`, folderNames: ['context', 'contexts'] },
      { name: `${prefix}-core`, folderNames: ['core'] },
      { name: `${prefix}-delta`, folderNames: ['delta', 'deltas', 'changes'] },
      { name: `${prefix}-dump`, folderNames: ['dump', 'dumps'] },
      {
        name: `${prefix}-examples`,
        folderNames: [
          'demo',
          'demos',
          'example',
          'examples',
          'sample',
          'samples',
          'sample-data',
        ],
      },
      {
        name: `${prefix}-environment`,
        folderNames: ['env', 'envs', 'environment', 'environments', 'venv'],
      },
      {
        name: `${prefix}-functions`,
        folderNames: [
          'func',
          'funcs',
          'function',
          'functions',
          'lambda',
          'lambdas',
          'logic',
          'math',
          'maths',
          'calc',
          'calcs',
          'calculation',
          'calculations',
        ],
      },
      {
        name: `${prefix}-generator`,
        folderNames: [
          'generator',
          'generators',
          'generated',
          'cfn-gen',
          'gen',
          'gens',
          'auto',
        ],
      },
      {
        name: `${prefix}-hook`,
        folderNames: ['hook', 'hooks', 'trigger', 'triggers'],
      },
      { name: `${prefix}-job`, folderNames: ['job', 'jobs'] },
      {
        name: `${prefix}-keys`,
        folderNames: [
          'key',
          'keys',
          'token',
          'tokens',
          'jwt',
          'secret',
          'secrets',
        ],
      },
      { name: `${prefix}-layout`, folderNames: ['layout', 'layouts'] },
      {
        name: `${prefix}-mail`,
        folderNames: ['mail', 'mails', 'email', 'emails', 'smtp', 'mailers'],
      },
      { name: `${prefix}-mappings`, folderNames: ['mappings', 'mapping'] },
      { name: `${prefix}-meta`, folderNames: ['meta'] },
      {
        name: `${prefix}-changesets`,
        folderNames: ['changesets', 'changeset'],
      },
      {
        name: `${prefix}-packages`,
        folderNames: [
          'package',
          'packages',
          'pkg',
          'pkgs',
          'serverpackages',
          'devpackages',
          'dependencies',
        ],
      },
      { name: `${prefix}-shared`, folderNames: ['shared', 'common'] },
      {
        name: `${prefix}-shader`,
        folderNames: ['glsl', 'hlsl', 'shader', 'shaders'],
      },
      { name: `${prefix}-stack`, folderNames: ['stack', 'stacks'] },
      {
        name: `${prefix}-template`,
        folderNames: [
          'template',
          'templates',
          'github/ISSUE_TEMPLATE',
          'github/PULL_REQUEST_TEMPLATE',
        ],
      },
      {
        name: `${prefix}-utils`,
        folderNames: ['util', 'utils', 'utility', 'utilities'],
      },
      { name: `${prefix}-supabase`, folderNames: ['supabase'] },
      { name: `${prefix}-private`, folderNames: ['private'] },
      { name: `${prefix}-linux`, folderNames: ['linux', 'linuxbsd', 'unix'] },
      { name: `${prefix}-windows`, folderNames: ['windows', 'win', 'win32'] },
      {
        name: `${prefix}-macos`,
        folderNames: ['macos', 'mac', 'osx', 'DS_Store'],
      },
      {
        name: `${prefix}-error`,
        folderNames: ['error', 'errors', 'err', 'errs', 'crash', 'crashes'],
      },
      { name: `${prefix}-event`, folderNames: ['event', 'events'] },
      {
        name: `${prefix}-secure`,
        folderNames: [
          'auth',
          'authentication',
          'secure',
          'security',
          'cert',
          'certs',
          'certificate',
          'certificates',
          'ssl',
          'cipher',
          'cypher',
          'tls',
        ],
      },
      { name: `${prefix}-custom`, folderNames: ['custom', 'customs'] },
      {
        name: `${prefix}-mock`,
        folderNames: [
          'draft',
          'drafts',
          'mock',
          'mocks',
          'fixture',
          'fixtures',
          'concept',
          'concepts',
          'sketch',
          'sketches',
        ],
      },
      {
        name: `${prefix}-syntax`,
        folderNames: ['syntax', 'syntaxes', 'spellcheck', 'spellcheckers'],
      },
      { name: `${prefix}-vm`, folderNames: ['vm', 'vms'] },
      { name: `${prefix}-stylus`, folderNames: ['stylus'] },
      { name: `${prefix}-flow`, folderNames: ['flow-typed'] },
      {
        name: `${prefix}-rules`,
        folderNames: [
          'rule',
          'rules',
          'validation',
          'validations',
          'validator',
          'validators',
        ],
      },
      {
        name: `${prefix}-review`,
        folderNames: [
          'review',
          'reviews',
          'revisal',
          'revisals',
          'reviewed',
          'preview',
          'previews',
        ],
      },
      {
        name: `${prefix}-animation`,
        folderNames: [
          'anim',
          'anims',
          'animation',
          'animations',
          'animated',
          'motion',
          'motions',
          'transition',
          'transitions',
          'easing',
          'easings',
        ],
      },
      { name: `${prefix}-guard`, folderNames: ['guard', 'guards'] },
      { name: `${prefix}-prisma`, folderNames: ['prisma', 'prisma/schema'] },
      {
        name: `${prefix}-pipe`,
        folderNames: ['pipe', 'pipes', 'pipeline', 'pipelines'],
      },
      { name: `${prefix}-svg`, folderNames: ['svg', 'svgs'] },
      {
        name: `${prefix}-vuex-store`,
        folderNames: ['store', 'stores'],
        enabledFor: [IconPack.Vuex],
      },
      {
        name: `${prefix}-nuxt`,
        folderNames: ['nuxt'],
      },
      {
        name: `${prefix}-vue-directives`,
        folderNames: ['directives'],
        enabledFor: [IconPack.Vuex, IconPack.Vue],
      },
      {
        name: `${prefix}-vue`,
        folderNames: ['components'],
        enabledFor: [IconPack.Vuex, IconPack.Vue],
      },
      { name: `${prefix}-terraform`, folderNames: ['terraform'] },
      {
        name: `${prefix}-mobile`,
        folderNames: [
          'mobile',
          'mobiles',
          'portable',
          'portability',
          'phone',
          'phones',
        ],
      },
      { name: `${prefix}-stencil`, folderNames: ['stencil'] },
      { name: `${prefix}-firebase`, folderNames: ['firebase'] },
      { name: `${prefix}-svelte`, folderNames: ['svelte', 'svelte-kit'] },
      {
        name: `${prefix}-update`,
        folderNames: ['update', 'updates', 'upgrade', 'upgrades'],
      },
      { name: `${prefix}-intellij`, folderNames: ['idea'], light: true },
      {
        name: `${prefix}-azure-pipelines`,
        folderNames: ['azure-pipelines', 'azure-pipelines-ci'],
      },
      { name: `${prefix}-mjml`, folderNames: ['mjml'] },
      {
        name: `${prefix}-admin`,
        folderNames: [
          'admin',
          'admins',
          'manager',
          'managers',
          'moderator',
          'moderators',
        ],
      },
      {
        name: `${prefix}-jupyter`,
        folderNames: ['jupyter', 'notebook', 'notebooks', 'ipynb'],
      },
      { name: `${prefix}-scala`, folderNames: ['scala'] },
      {
        name: `${prefix}-connection`,
        folderNames: [
          'connection',
          'connections',
          'integration',
          'integrations',
          'remote',
          'remotes',
        ],
      },
      { name: `${prefix}-quasar`, folderNames: ['quasar'] },
      { name: `${prefix}-next`, folderNames: ['next'] },
      { name: `${prefix}-cobol`, folderNames: ['cobol'] },
      { name: `${prefix}-yarn`, folderNames: ['yarn'] },
      { name: `${prefix}-husky`, folderNames: ['husky'] },
      {
        name: `${prefix}-storybook`,
        folderNames: ['storybook', 'stories'],
      },
      { name: `${prefix}-base`, folderNames: ['base', 'bases'] },
      {
        name: `${prefix}-cart`,
        folderNames: ['cart', 'shopping-cart', 'shopping', 'shop'],
      },
      {
        name: `${prefix}-home`,
        folderNames: ['home', 'start', 'main', 'landing'],
      },
      {
        name: `${prefix}-project`,
        folderNames: ['project', 'projects'],
      },
      {
        name: `${prefix}-interface`,
        folderNames: ['interface', 'interfaces'],
      },
      { name: `${prefix}-netlify`, folderNames: ['netlify'] },
      {
        name: `${prefix}-enum`,
        folderNames: ['enum', 'enums'],
      },
      {
        name: `${prefix}-contract`,
        folderNames: [
          'pact',
          'pacts',
          'contract',
          'contracts',
          'contract-testing',
          'contract-test',
          'contract-tests',
        ],
      },
      {
        name: `${prefix}-helm`,
        folderNames: ['helm', 'helmchart', 'helmcharts'],
      },
      {
        name: `${prefix}-queue`,
        folderNames: ['queue', 'queues', 'bull', 'mq'],
      },
      {
        name: `${prefix}-vercel`,
        folderNames: ['vercel', 'now'],
      },
      {
        name: `${prefix}-cypress`,
        folderNames: ['cypress'],
      },
      {
        name: `${prefix}-decorators`,
        folderNames: ['decorator', 'decorators'],
      },
      {
        name: `${prefix}-java`,
        folderNames: ['java'],
      },
      {
        name: `${prefix}-resolver`,
        folderNames: ['resolver', 'resolvers'],
      },
      {
        name: `${prefix}-angular`,
        folderNames: ['angular'],
      },
      {
        name: `${prefix}-unity`,
        folderNames: ['unity'],
      },
      {
        name: `${prefix}-pdf`,
        folderNames: ['pdf', 'pdfs'],
      },
      {
        name: `${prefix}-proto`,
        folderNames: ['protobuf', 'protobufs', 'proto', 'protos'],
      },
      {
        name: `${prefix}-plastic`,
        folderNames: ['plastic'],
      },
      {
        name: `${prefix}-gamemaker`,
        folderNames: ['gamemaker', 'gamemaker2'],
      },
      {
        name: `${prefix}-mercurial`,
        folderNames: ['hg', 'hghooks', 'hgext'],
      },
      {
        name: `${prefix}-godot`,
        folderNames: ['godot', 'godot-cpp'],
      },
      {
        name: `${prefix}-lottie`,
        folderNames: ['lottie', 'lotties', 'lottiefiles'],
      },
      {
        name: `${prefix}-taskfile`,
        folderNames: ['taskfile', 'taskfiles'],
      },
      {
        name: `${prefix}-drizzle`,
        folderNames: ['drizzle'],
      },
      {
        name: `${prefix}-cloudflare`,
        folderNames: ['cloudflare'],
      },
      {
        name: `${prefix}-seeders`,
        folderNames: ['seeds', 'seeders', 'seed', 'seeding'],
      },
      {
        name: `${prefix}-store`,
        folderNames: ['store', 'stores'],
        enabledFor: [IconPack.Angular],
      },
      { name: `${prefix}-bicep`, folderNames: ['bicep'] },
      { name: `${prefix}-snapcraft`, folderNames: ['snap', 'snapcraft'] },
      {
        name: `${prefix}-development`,
        folderNames: ['dev', 'development'],
      },
      { name: `${prefix}-flutter`, folderNames: ['flutter'] },
      { name: `${prefix}-snippet`, folderNames: ['snippet', 'snippets'] },
      { name: `${prefix}-element`, folderNames: ['element', 'elements'] },
      {
        name: `${prefix}-src-tauri`,
        folderNames: ['src-tauri'],
      },
      {
        name: `${prefix}-favicon`,
        folderNames: ['favicon', 'favicons'],
      },
      {
        name: `${prefix}-bloc`,
        folderNames: ['bloc', 'cubit', 'blocs', 'cubits'],
      },
      {
        name: `${prefix}-lefthook`,
        folderNames: ['lefthook', 'lefthook-local'],
      },
      {
        name: `${prefix}-powershell`,
        folderNames: ['powershell', 'ps', 'ps1'],
      },
      {
        name: `${prefix}-repository`,
        folderNames: ['repository', 'repositories', 'repo', 'repos'],
      },
      {
        name: `${prefix}-luau`,
        folderNames: ['luau'],
      },
      { name: `${prefix}-obsidian`, folderNames: ['obsidian'] },
      { name: `${prefix}-trash`, folderNames: ['trash'] },
      { name: `${prefix}-cline`, folderNames: ['cline_docs'] },
      { name: `${prefix}-liquibase`, folderNames: ['liquibase'] },
      {
        name: `${prefix}-dart`,
        folderNames: ['dart', 'dart_tool', 'dart_tools'],
      },
      { name: `${prefix}-zeabur`, folderNames: ['zeabur'] },
    ],
  };
}
